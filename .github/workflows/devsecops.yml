# This is a basic workflow to help you get started with Actions

name: DevSecOps

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
#   pull_request:
#     branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
#     permissions:
#       actions: read
#       contents: read
#       security-events: write
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checking out repository
        uses: actions/checkout@v2
          
#       - name: Performing Automated Code Review using Codacy
#         uses: codacy/codacy-analysis-cli-action@4.0.0
#         with:
#           api-token: ${{ secrets.CODACY_TOKEN }}
#           output: codacy.sarif
#           format: sarif
#           # Adjust severity of non-security issues
#           gh-code-scanning-compat: true
#           # Force 0 exit code to allow SARIF file generation
#           # This will handover control about PR rejection to the GitHub side
#           max-allowed-issues: 2147483647
          
#       - name: Preparing Automated Code Review Results
#         run: |
#           pwd
#           ls
#           curl --upload-file ./codacy.sarif https://transfer.sh/codacy.sarif
          
#       - name: Finishing Automated Code Review Results 
#         uses: github/codeql-action/upload-sarif@v1
#         with:
#           sarif_file: codacy.sarif
      
#       - name: Scanning for Sensitive Information using Truffle Hog
#         uses: appleboy/ssh-action@v0.1.4
#         with:
#           host: ${{secrets.SSH_HOST}}
#           key: ${{secrets.SSH_KEY}}
#           username: ${{secrets.SSH_USERNAME}}
          
#           script: |
#             sudo apt update
#             apt install -y python3-pip
#             pip3 install truffleHog3
#             cd /opt/app/UnSAFE_Bank/
#             trufflehog3 --no-history --format json --output trufflehog.json
#             trufflehog3 -R trufflehog.json --output trufflehog.html
#             curl --upload-file ./trufflehog.html https://transfer.sh/trufflehog.html

#       - name: Initiating Sensitive Information Scan using Truffle Hog
#         run: |
#            pip install truffleHog3
#            set +e
#            trufflehog3 --no-history --format json --output trufflehog.json
#            trufflehog3 -R trufflehog.json --output trufflehog.html
#            curl --upload-file ./trufflehog.html https://transfer.sh/trufflehog.html

#       - name: Performing Software Composition Analysis
#         uses: dependency-check/Dependency-Check_Action@main
#         id: Depcheck
#         with:
#           project: 'test'
#           path: '.'
#           format: 'HTML'    
#           others: ''
          
#       - name: Preparing Software Composition Analysis Results
#         uses: actions/upload-artifact@master
#         with:
#            name: Depcheck report
#            path: ${{github.workspace}}/reports
           
#       - name: Finalizing Software Composition Analysis Results
#         run: |
#           cd reports
#           curl --upload-file ./dependency-check-report.html https://transfer.sh/dependency-check-report.html

#       - name: SonarCloud Scan
#         uses: sonarsource/sonarcloud-github-action@master
#         env:
#           GITHUB_TOKEN: ${{ secrets.PA_TOKEN }}
#           SONAR_TOKEN: ${{ secrets.SC_TOKEN }}
#         with:
#           args: >
#             -Dsonar.organization=lucideus
#             -Dsonar.projectKey=rubaljain_UnSAFE_Bank
#             -Dsonar.c.file.suffixes=-
#             -Dsonar.cpp.file.suffixes=-
#             -Dsonar.objc.file.suffixes=-

      - name: Installing NPM
        run: |
          sudo npm install npm -g
          sudo npm install -g sonar-report
          cd /usr/local/lib/node_modules/sonar-report
          sudo rm index.js
          sudo wget https://github.com/rubaljain/UnSAFE_Bank/blob/master/.github/index.js
          sudo npm install
          cd /home/runner/work/UnSAFE_Bank/UnSAFE_Bank
          chmod +x /usr/local/bin/sonar-report
          sonar-report --sonarurl="https://sonarcloud.io" --project="rubaljain_UnSAFE_Bank" --application="UnSAFE_Bank" --sonarcomponent="rubaljain_UnSAFE_Bank" > /home/runner/work/UnSAFE_Bank/UnSAFE_Bank/sonarqube.html
          curl --upload-file ./sonarqube.html https://transfer.sh/sonarqube.html
